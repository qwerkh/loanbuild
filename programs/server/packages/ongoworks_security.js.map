{"version":3,"sources":["meteor://ðŸ’»app/packages/ongoworks:security/lib/server/utility.js","meteor://ðŸ’»app/packages/ongoworks:security/lib/server/Security.js","meteor://ðŸ’»app/packages/ongoworks:security/lib/server/Security.Rule.js","meteor://ðŸ’»app/packages/ongoworks:security/lib/server/Security.Check.js","meteor://ðŸ’»app/packages/ongoworks:security/lib/builtInRules.js"],"names":["rulesByCollection","created","allow","insert","update","remove","download","deny","addFuncForAll","collections","allowOrDeny","types","fetch","func","rules","transform","_","isArray","each","t","c","ensureCreated","contains","reject","has","getCollectionName","ensureDefaultAllow","getRulesForCollectionAndType","collectionName","type","select","rule","_types","collection","_name","files","Security","errorMessages","multipleCan","notAllowed","requiresDefinition","requiresAllow","collectionsArg","noCollectionOrType","permit","Rule","can","userId","Check","defineMethod","securityDefineMethod","name","definition","prototype","Error","LocalCollection","wrapTransform","arg","_restrictions","push","Mongo","Collection","constructor","_collections","combinedFetch","every","restriction","union","hasOwnProperty","allowInClientCode","ensureSecureDeny","doc","modifier","args","fields","computeChangedFieldsFromModifier","loopDoc","clone","_transform","addedRandomId","_id","Random","id","shift","for","check","params","keys","field","indexOf","substring","read","MongoID","ObjectID","forEach","options","isEmpty","findOne","any","throw","Meteor","Package","Roles","role","userIsInRole","group","userHasRole","fieldNames","fieldName"],"mappings":"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","file":"/packages/ongoworks_security.js","sourcesContent":["/* global _, rulesByCollection:true, addFuncForAll:true, ensureCreated:true, ensureDefaultAllow:true */\n\nrulesByCollection = {};\n\nvar created = {\n  allow: {\n    insert: {},\n    update: {},\n    remove: {},\n    download: {} // for use with CollectionFS packages\n  },\n  deny: {\n    insert: {},\n    update: {},\n    remove: {},\n    download: {} // for use with CollectionFS packages\n  }\n};\n\n/**\n * Adds the given function as an allow or deny function for all specified collections and types.\n * @param {Array(Mongo.Collection)} collections Array of Mongo.Collection instances\n * @param {String}                  allowOrDeny \"allow\" or \"deny\"\n * @param {Array(String)}           types       Array of types (\"insert\", \"update\", \"remove\")\n * @param {Array(String)|null}      fetch       `fetch` property to use\n * @param {Function}                func        The function\n */\naddFuncForAll = function addFuncForAll(collections, allowOrDeny, types, fetch, func) {\n  // We always disable transformation, but we transform for specific\n  // rules upon running our deny function if requested.\n  var rules = {transform: null};\n  if (_.isArray(fetch)) {\n    rules.fetch = fetch;\n  }\n  _.each(types, function (t) {\n    rules[t] = func;\n  });\n  _.each(collections, function (c) {\n    c[allowOrDeny](rules);\n  });\n};\n\n/**\n * Creates the allow or deny function for the given collections if not already created. This ensures that this package only ever creates up to one allow and one deny per collection.\n * @param   {String}                  allowOrDeny \"allow\" or \"deny\"\n * @param   {Array(Mongo.Collection)} collections An array of collections\n * @param   {Array(String)}           types       An array of types (\"insert\", \"update\", \"remove\")\n * @param   {Array(String)|null}      fetch       `fetch` property to use\n * @param   {Function}                func        The function\n */\nensureCreated = function ensureCreated(allowOrDeny, collections, types, fetch, func) {\n  _.each(types, t => {\n    // Ignore \"read\"\n    if (!_.contains(['insert', 'update', 'remove', 'download'], t)) return;\n\n    collections = _.reject(collections, c => {\n      return _.has(created[allowOrDeny][t], getCollectionName(c));\n    });\n    addFuncForAll(collections, allowOrDeny, [t], null, func);\n    // mark that we've defined function for collection-type combo\n    _.each(collections, c => {\n      created[allowOrDeny][t][getCollectionName(c)] = true;\n    });\n  });\n};\n\n/**\n * Sets up default allow functions for the collections and types.\n * @param   {Array(Mongo.Collection)} collections Array of Mongo.Collection instances\n * @param   {Array(String)}           types       Array of types (\"insert\", \"update\", \"remove\")\n */\nensureDefaultAllow = function ensureDefaultAllow(collections, types) {\n  ensureCreated(\"allow\", collections, types, [], function () {\n    return true;\n  });\n};\n\n/**\n * Return only those rules that apply to the given collection and operation type\n */\ngetRulesForCollectionAndType = function getRulesForCollectionAndType(collectionName, type) {\n  var rules = rulesByCollection[collectionName] || [];\n  return _.select(rules, function (rule) {\n    return _.contains(rule._types, type);\n  });\n};\n\ngetCollectionName = function getCollectionName(collection) {\n  // CollectionFS has underlying collection on `files` property\n  return collection._name || (collection.files && collection.files._name);\n};\n","// The `Security` object is exported and provides the package API\nSecurity = {\n  // Putting these on the exported object allows package users to override if necessary\n  errorMessages: {\n    multipleCan: 'You may not combine more than one insert, update, or remove on a Security.can chain',\n    notAllowed: 'Action not allowed',\n    requiresDefinition: 'Security.defineMethod requires a \"definition\" argument',\n    requiresAllow: 'Security.defineMethod requires an \"allow\" function',\n    collectionsArg: 'The collections argument must be a Mongo.Collection instance or an array of them',\n    noCollectionOrType: 'At a minimum, you must call permit and collections methods for a security rule.',\n  },\n  // the starting point of the chain\n  permit: function permit(types) {\n    return new Security.Rule(types);\n  },\n  can: function can(userId) {\n    return new Security.Check(userId);\n  },\n  defineMethod: function securityDefineMethod(name, definition) {\n    // Check whether a rule with the given name already exists; can't overwrite\n    if (Security.Rule.prototype[name]) {\n      throw new Error('A security method with the name \"' + name + '\" has already been defined');\n    }\n    if (!definition) throw new Error(Security.errorMessages.requiresDefinition);\n    // If \"deny\" is used, convert to \"allow\" for backwards compatibility\n    if (definition.deny) {\n      definition.allow = (...args) => {\n        return !definition.deny(...args);\n      };\n    }\n    // Make sure the definition argument is an object that has an `allow` property\n    if (!definition.allow) throw new Error(Security.errorMessages.requiresAllow);\n    // Wrap transform, if provided\n    if (definition.transform) {\n      definition.transform = LocalCollection.wrapTransform(definition.transform);\n    }\n    Security.Rule.prototype[name] = function (arg) {\n      this._restrictions.push({\n        definition,\n        arg,\n      });\n      return this;\n    };\n  }\n};\n\nMongo.Collection.prototype.permit = function (types) {\n  return Security.permit(types).collections(this);\n};\n","Security.Rule = class {\n  constructor(types) {\n    if (!_.isArray(types)) types = [types];\n    this._types = types;\n    this._restrictions = [];\n  }\n\n  collections(collections) {\n    // Make sure the `collections` argument is either a `Mongo.Collection` instance or\n    // an array of them. If it's a single collection, convert it to a one-item array.\n    if (!_.isArray(collections)) collections = [collections];\n\n    // Keep list keyed by collection name\n    _.each(collections, collection => {\n      if (!(collection instanceof Mongo.Collection) &&\n          // CollectionFS has underlying collection on `files` property\n        !(collection.files instanceof Mongo.Collection)) {\n        throw new Error(Security.errorMessages.collectionsArg);\n      }\n      // CollectionFS has underlying collection on `files` property\n      const collectionName = getCollectionName(collection);\n      rulesByCollection[collectionName] = rulesByCollection[collectionName] || [];\n      rulesByCollection[collectionName].push(this);\n    });\n\n    this._collections = collections;\n\n    return this;\n  }\n\n  combinedFetch() {\n    // We need a combined `fetch` array. The `fetch` is optional and can be either an array\n    // or a function that takes the argument passed to the restriction method and returns an array.\n    let fetch = [];\n    _.every(this._restrictions, restriction => {\n      if (_.isArray(restriction.definition.fetch)) {\n        fetch = _.union(fetch, restriction.definition.fetch);\n      } else if (typeof restriction.definition.fetch === \"function\") {\n        fetch = _.union(fetch, restriction.definition.fetch(restriction.arg));\n      } else if (!restriction.definition.hasOwnProperty('fetch')) {\n        // If `fetch` property isn't present, we should fetch the full doc.\n        fetch = null;\n        return false; // Exit loop\n      }\n      return true;\n    });\n    return fetch;\n  }\n\n  allowInClientCode() {\n    if (!this._collections || !this._types) throw new Error(Security.errorMessages.noCollectionOrType);\n    ensureSecureDeny(this._collections, this._types);\n  }\n\n  allow(type, collection, userId, doc, modifier, ...args) {\n    let fields;\n    if (type === 'update') fields = computeChangedFieldsFromModifier(modifier);\n\n    // Loop through all defined restrictions. Restrictions are additive for this chained\n    // rule, so if any allow function returns false, this function should return false.\n    return _.every(this._restrictions, restriction => {\n      // Clone the doc in case we need to transform it. Transformations\n      // should apply to only the one restriction.\n      let loopDoc = _.clone(doc);\n\n      // If transform is a function, apply that\n      let transform = restriction.definition.transform;\n      if (transform !== null) {\n        transform = transform || collection._transform;\n        if (typeof transform === 'function') {\n          let addedRandomId = false;\n          if (type === 'insert' && !loopDoc._id) {\n            // The wrapped transform requires an _id, but we\n            // don't have access to the generatedId from Meteor API,\n            // so we'll fudge one and then remove it.\n            loopDoc._id = Random.id();\n            addedRandomId = true;\n          }\n          loopDoc = transform(loopDoc);\n          if (addedRandomId) delete loopDoc._id;\n        }\n      }\n\n      return restriction.definition.allow(type, restriction.arg, userId, loopDoc, fields, modifier, ...args);\n    });\n  }\n}\n\nfunction ensureSecureDeny(collections, types) {\n  // If we haven't yet done so, set up a default, permissive `allow` function for all of\n  // the given collections and types. We control all security through `deny` functions only, but\n  // there must first be at least one `allow` function for each collection or all writes\n  // will be denied.\n  ensureDefaultAllow(collections, types);\n\n  _.each(types, t => {\n    _.each(collections, collection => {\n      ensureCreated('deny', [collection], [t], null, function (...args) {\n        const userId = args.shift();\n\n        // If type is update, remove the `fields` argument. We will create our own\n        // for consistency.\n        if (t === 'update') args = [args[0], args[2]];\n\n        return !Security.can(userId)[t](...args).for(collection).check();\n      });\n    });\n  });\n}\n\nfunction computeChangedFieldsFromModifier(modifier) {\n  var fields = [];\n  // This is the same logic Meteor's mongo package uses in\n  // https://github.com/meteor/meteor/blob/devel/packages/mongo/collection.js\n  _.each(modifier, function (params) {\n    _.each(_.keys(params), function (field) {\n      // treat dotted fields as if they are replacing their\n      // top-level part\n      if (field.indexOf('.') !== -1)\n        field = field.substring(0, field.indexOf('.'));\n\n      // record the field we are trying to change\n      if (!_.contains(fields, field))\n        fields.push(field);\n    });\n  });\n  return fields;\n}\n","Security.Check = class {\n  constructor(userId) {\n    this.userId = userId || null;\n  }\n\n  for(collection) {\n    this.collection = collection;\n    this.collectionName = getCollectionName(collection);\n    return this;\n  }\n\n  insert(doc, ...args) {\n    if (this.type) throw new Error(Security.errorMessages.multipleCan);\n    this.type = 'insert';\n    this.doc = doc;\n    this.args = args;\n    return this;\n  }\n\n  update(doc, modifier, ...args) {\n    if (this.type) throw new Error(Security.errorMessages.multipleCan);\n    this.type = 'update';\n    this.doc = doc;\n    this.modifier = modifier;\n    this.args = args;\n    return this;\n  }\n\n  remove(doc, ...args) {\n    if (this.type) throw new Error(Security.errorMessages.multipleCan);\n    this.type = 'remove';\n    this.doc = doc;\n    this.args = args;\n    return this;\n  }\n\n  read(doc, ...args) {\n    if (this.type) throw new Error(Security.errorMessages.multipleCan);\n    this.type = 'read';\n    this.doc = doc;\n    this.args = args;\n    return this;\n  }\n\n  download(doc, ...args) {\n    if (this.type) throw new Error(Security.errorMessages.multipleCan);\n    this.type = 'download';\n    this.doc = doc;\n    this.args = args;\n    return this;\n  }\n\n  // EXAMPLES:\n  // Security.can(userId).insert(doc).for(MyCollection).check()\n  // Security.can(userId).update(id, modifier).for(MyCollection).check()\n  // Security.can(userId).remove(id).for(MyCollection).check()\n  check() {\n    // Select only those rules that apply to this operation type\n    const rules = getRulesForCollectionAndType(this.collectionName, this.type);\n\n    // If this.doc is an ID, we will look up the doc, fetching only the fields needed.\n    // To find out which fields are needed, we will combine all the `fetch` arrays from\n    // all the restrictions in all the rules.\n    if (typeof this.doc === 'string' || this.doc instanceof MongoID.ObjectID) {\n      let fields = {};\n      _.every(rules, rule => {\n        const fetch = rule.combinedFetch();\n        if (fetch === null) {\n          fields = null;\n          return false; // Exit loop\n        }\n        rule.combinedFetch().forEach(field => {\n          fields[field] = 1;\n        });\n        return true;\n      });\n\n      let options = {};\n      if (fields) {\n        if (_.isEmpty(fields)) {\n          options = {_id: 1};\n        } else {\n          options = {fields};\n        }\n      }\n      this.doc = this.collection.findOne(this.doc, options);\n    }\n\n    // Loop through all defined rules for this collection. There is an OR relationship among\n    // all rules for the collection, so if any \"allow\" function DO return true, we allow.\n    return _.any(rules, rule => rule.allow(this.type, this.collection, this.userId, this.doc, this.modifier, ...this.args));\n  }\n\n  // EXAMPLES:\n  // Security.can(userId).insert(doc).for(MyCollection).throw()\n  // Security.can(userId).update(id, modifier).for(MyCollection).throw()\n  // Security.can(userId).remove(id).for(MyCollection).throw()\n  throw() {\n    if (!this.check()) throw new Meteor.Error('access-denied', Security.errorMessages.notAllowed);\n  }\n}\n","/*\n * This file defines built-in restriction methods\n */\n\n/*\n * No one\n */\n\nSecurity.defineMethod(\"never\", {\n  fetch: [],\n  transform: null,\n  allow() {\n    return false;\n  },\n});\n\n/*\n * Logged In\n */\n\nSecurity.defineMethod(\"ifLoggedIn\", {\n  fetch: [],\n  transform: null,\n  allow(type, arg, userId) {\n    return !!userId;\n  },\n});\n\n/*\n * Specific User ID\n */\n\nSecurity.defineMethod(\"ifHasUserId\", {\n  fetch: [],\n  transform: null,\n  allow(type, arg, userId) {\n    return userId === arg;\n  },\n});\n\n/*\n * Specific Roles\n */\n\n/*\n * alanning:roles support\n */\nif (Package && Package[\"alanning:roles\"]) {\n\n  var Roles = Package[\"alanning:roles\"].Roles;\n\n  Security.defineMethod(\"ifHasRole\", {\n    fetch: [],\n    transform: null,\n    allow(type, arg, userId) {\n      if (!arg) throw new Error('ifHasRole security rule method requires an argument');\n      if (arg.role) {\n        return Roles.userIsInRole(userId, arg.role, arg.group);\n      } else {\n        return Roles.userIsInRole(userId, arg);\n      }\n    },\n  });\n\n}\n\n/*\n * nicolaslopezj:roles support\n * Note: doesn't support groups\n */\nif (Package && Package[\"nicolaslopezj:roles\"]) {\n\n  var Roles = Package[\"nicolaslopezj:roles\"].Roles;\n\n  Security.defineMethod(\"ifHasRole\", {\n    fetch: [],\n    transform: null,\n    allow(type, arg, userId) {\n      if (!arg) throw new Error('ifHasRole security rule method requires an argument');\n      return Roles.userHasRole(userId, arg);\n    }\n  });\n\n}\n\n/*\n * Specific Properties\n */\n\nSecurity.defineMethod(\"onlyProps\", {\n  fetch: [],\n  transform: null,\n  allow(type, arg, userId, doc, fieldNames) {\n    if (!_.isArray(arg)) arg = [arg];\n\n    fieldNames = fieldNames || _.keys(doc);\n\n    return _.every(fieldNames, function (fieldName) {\n      return _.contains(arg, fieldName);\n    });\n  },\n});\n\nSecurity.defineMethod(\"exceptProps\", {\n  fetch: [],\n  transform: null,\n  allow(type, arg, userId, doc, fieldNames) {\n    if (!_.isArray(arg)) arg = [arg];\n\n    fieldNames = fieldNames || _.keys(doc);\n\n    return !_.any(fieldNames, function (fieldName) {\n      return _.contains(arg, fieldName);\n    });\n  },\n});\n"]}