{"version":3,"mappings":"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","names":["module","Profile","Fiber","require","filter","parseFloat","process","env","METEOR_PROFILE","bucketStats","Object","create","SPACES_STR","spaces","len","length","slice","DOTS_STR","dots","leftRightAlign","str1","str2","middle","Math","max","leftRightDots","printIndentation","isLastLeafStack","init","i","isLastLeaf","last","formatMs","n","String","round","replace","encodeEntryKey","entry","join","decodeEntryKey","key","split","globalEntry","running","bucketName","f","enabled","assign","profileWrapper","apply","arguments","name","currentEntry","current","profilerEntry","push","start","hrtime","elapsed","stats","time","count","isOther","pop","bucket","run","console","log","runningName","print","reportNum","report","setupReport","reportHierarchy","reportHotLeaves","getTopLevelTotal","entries","prefix","entryName","entryStats","entryTime","isTopLevelEntry","topLevelEntries","text","isChild","entry1","entry2","children","hasChildren","hasSignificantChildren","some","isLeaf","otherTime","total","forEach","child","injectOtherTime","other","reportOn","isParent","childrenList","concat","allLeafs","set","map","keys","sort","leafTotals","leafName","leaf","totals","info","a","b","topTotal","parent"],"sourceRoot":"","sources":["tools/tool-env/profile.ts"],"sourcesContent":["// Tiny profiler\n//\n// Enable by setting the environment variable `METEOR_PROFILE`.\n//\n// The main entry point is `Profile`, which wraps an existing function\n// and returns a new function which, when called, calls the original\n// function and profiles it.\n//\n// before:\n//\n//     foo: function (a) {\n//       return a + this.b;\n//     },\n//\n// after:\n//\n//     foo: Profile(\"foo\", function (a) {\n//       return a + this.b;\n//     }),\n//\n// The advantage of this form is that it doesn't change the\n// indentation of the wrapped code, which makes merging changes from\n// other code branches easier.\n//\n// If profiling is disabled (if `METEOR_PROFILE` isn't set), `Profile`\n// simply returns the original function.\n//\n// To run a profiling session and print the report, call `Profile.run`:\n//\n//     var createBundle = function () {\n//       Profile.run(\"bundle\", function () {\n//         ...code to create the bundle which includes calls to `Profile`.\n//       });\n//     };\n//\n// Code is not profiled when called outside of a `Profile.run`, so the\n// times in the report only include the time spent inside of the call\n// to `Profile.run`.\n//\n// Sometimes you'll want to use a name for the profile bucket which\n// depends on the arguments passed to the function or the value of\n// `this`.  In this case you can pass a function for the bucket\n// argument, which will be called to get the bucket name.\n//\n// before:\n//     build: function (target) {\n//       ... build target ...\n//     },\n//\n// after:\n//     build: Profile(\n//       function (target) { return \"build \" + target; },\n//       function (target) {\n//         ... build target ...\n//       }),\n//\n// But if it's easier, you can use `Profile.time` instead, which\n// immediately calls the passed function with no arguments and\n// profiles it, and returns what the function returns.\n//\n//     foo: function (a) {\n//       var self = this;\n//       return Profile.time(\"foo\", function () {\n//         return a + self.b;\n//       });\n//     },\n//\n//     build: function (target) {\n//       var self = this;\n//       self.doSomeSetup();\n//       Profile.time(\"build \" + target, function () {\n//         ... build target ...\n//       });\n//       self.doSomeCleanup();\n//     },\n//\n// The disadvantage is that you end up changing the indentation of the\n// profiled code, which makes merging branches more painful.  But you\n// can profile anywhere in the code; you don't have to just profile at\n// function boundaries.\n//\n// Note profiling code will itself add a bit of execution time.\n// If you profile in a tight loop and your total execution time is\n// going up, you're probably starting to profile how long it takes to\n// profile things :).\n//\n// If another profile (such as \"compile js\") is called while the first\n// function is currently being profiled, this creates an entry like\n// this:\n//\n//    build client : compile js\n//\n// which can continue to be nested, e.g.,\n//\n//    build client : compile js : read source files\n//\n// The total time reported for a bucket such as \"build client\" doesn't\n// change regardless of whether it has child entries or not.  However,\n// if an entry has child entries, it automatically gets an \"other\"\n// entry:\n//\n//     build client: 400.0\n//       compile js: 300.0\n//         read source files: 20.0\n//         other compile js: 280.0\n//       other build client: 100.0\n//\n// The \"other\" entry reports how much time was spent in the \"build\n// client\" entry not spent in the other child entries.\n//\n// The are two reports displayed: the hierarchical report and the\n// leaf time report.  The hierarchical report looks like the example\n// above and shows how much time was spent in each entry within its\n// parent entry.\n//\n// The primary purpose of the hierarchical report is to be able to see\n// where times are unaccounted for.  If you see a lot of time being\n// spent in an \"other\" bucket, and you don't know what it is, you can\n// add more profiling to dig deeper.\n//\n// The leaf time report shows the total time spent within leaf\n// buckets.  For example, if if multiple steps have \"read source\n// files\", the leaf time reports shows the total amount of time spent\n// in \"read source files\" across all calls.\n//\n// Once you see in the hierarchical report that you have a good handle\n// on accounting for most of the time, the leaf report shows you which\n// buckets are the most expensive.\n//\n// By only including leaf buckets, the times in the leaf report are\n// non-overlapping.  (The total of the times equals the elapsed time\n// being profiled).\n//\n// For example, suppose \"A\" is profiled for a total time of 200ms, and\n// that includes a call to \"B\" of 150ms:\n//\n//     B: 150\n//     A (without B): 50\n//\n// and suppose there's another call to \"A\" which *doesn't* include a\n// call to \"B\":\n//\n//     A: 300\n//\n// and there's a call to \"B\" directly:\n//\n//     B: 100\n//\n// All for a total time of 600ms.  In the hierarchical report, this\n// looks like:\n//\n//     A: 500.0\n//       B: 150.0\n//       other A: 350.0\n//     B: 100.0\n//\n// and in the leaf time report:\n//\n//     other A: 350.0\n//     B: 250.0\n//\n// In both reports the grand total is 600ms.\n\nconst Fiber = require('fibers');\n\nconst filter = parseFloat(process.env.METEOR_PROFILE || \"100\"); // ms\n\ntype Stats = {\n  time: number;\n  count: number;\n  isOther: boolean;\n}\n\nlet bucketStats: Record<string, Stats> = Object.create(null);\n\nlet SPACES_STR = ' ';\n// return a string of `x` spaces\nfunction spaces(len: number) {\n  while (SPACES_STR.length < len) {\n    SPACES_STR = SPACES_STR + SPACES_STR;\n  }\n  return SPACES_STR.slice(0, len);\n}\n\nlet DOTS_STR = '.';\n// return a string of `x` dots\nfunction dots(len: number) {\n  while (DOTS_STR.length < len) {\n    DOTS_STR = DOTS_STR + DOTS_STR;\n  }\n  return DOTS_STR.slice(0, len);\n}\n\nfunction leftRightAlign(str1: string, str2: string, len: number) {\n  var middle = Math.max(1, len - str1.length - str2.length);\n  return str1 + spaces(middle) + str2;\n}\n\nfunction leftRightDots(str1: string, str2: string, len: number) {\n  var middle = Math.max(1, len - str1.length - str2.length);\n  return str1 + dots(middle) + str2;\n}\n\nfunction printIndentation(isLastLeafStack: boolean[]) {\n  if (!isLastLeafStack.length) {\n    return '';\n  }\n\n  const { length } = isLastLeafStack;\n  let init = '';\n  for (let i = 0; i < length - 1; ++i) {\n    const isLastLeaf = isLastLeafStack[i];\n    init += isLastLeaf ? '   ' : '│  ';\n  }\n\n  const last = isLastLeafStack[length - 1] ? '└─ ' : '├─ ';\n\n  return init + last;\n}\n\nfunction formatMs(n: number) {\n  // integer with thousands separators\n  return String(Math.round(n)).replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\") + \" ms\";\n}\n\nfunction encodeEntryKey(entry: string[]) {\n  return entry.join('\\t');\n}\n\nfunction decodeEntryKey(key: string) {\n  return key.split('\\t');\n}\n\nconst globalEntry: string[] = [];\nlet running = false;\n\nexport function Profile<\n  TArgs extends any[],\n  TResult,\n>(\n  bucketName: string | ((...args: TArgs) => string),\n  f: (...args: TArgs) => TResult,\n): typeof f {\n  if (! Profile.enabled) {\n    return f;\n  }\n\n  return Object.assign(function profileWrapper(this: any) {\n    if (! running) {\n      return f.apply(this, arguments as any);\n    }\n\n    const name = typeof bucketName === \"function\"\n      ? bucketName.apply(this, arguments as any)\n      : bucketName;\n\n    const currentEntry = Fiber.current\n      ? Fiber.current.profilerEntry || (Fiber.current.profilerEntry = [])\n      : globalEntry;\n\n    currentEntry.push(name);\n    const key = encodeEntryKey(currentEntry);\n    const start = process.hrtime();\n    try {\n      return f.apply(this, arguments as any);\n    } finally {\n      const elapsed = process.hrtime(start);\n      const stats = (bucketStats[key] || (bucketStats[key] = {\n        time: 0.0,\n        count: 0,\n        isOther: false,\n      }));\n      stats.time += (elapsed[0] * 1000 + elapsed[1] / 1000000);\n      stats.count++;\n      currentEntry.pop();\n    }\n  }, f) as typeof f;\n}\n\nexport namespace Profile {\n  export let enabled = !! process.env.METEOR_PROFILE;\n\n  export function time<TResult>(bucket: string, f: () => TResult) {\n    return Profile(bucket, f)();\n  }\n\n  export function run<TResult>(bucket: string, f: () => TResult) {\n    if (! Profile.enabled) {\n      return f();\n    }\n\n    if (running) {\n      // We've kept the calls to Profile.run in the tool disjoint so far,\n      // and should probably keep doing so, but if we mess up, warn and continue.\n      console.log(\"Warning: Nested Profile.run at \" + bucket);\n      return time(bucket, f);\n    }\n\n    runningName = bucket;\n    print(`(#${reportNum}) Profiling: ${runningName}`);\n    start();\n    try {\n      return time(bucket, f);\n    } finally {\n      report();\n      reportNum++;\n    }\n  }\n\n  function start() {\n    bucketStats = {};\n    running = true;\n  }\n\n  let runningName: string;\n  let reportNum = 1;\n  function report() {\n    if (! Profile.enabled) {\n      return;\n    }\n    running = false;\n    print('');\n    setupReport();\n    reportHierarchy();\n    print('');\n    reportHotLeaves();\n    print('');\n    print(`(#${reportNum}) Total: ${formatMs(getTopLevelTotal())}` +\n          ` (${runningName})`);\n    print('');\n  }\n}\n\ntype Entry = string[];\nlet entries: Entry[] = [];\n\nconst prefix = \"| \";\n\nfunction entryName(entry: Entry) {\n  return entry[entry.length - 1];\n}\n\nfunction entryStats(entry: Entry) {\n  return bucketStats[encodeEntryKey(entry)];\n}\n\nfunction entryTime(entry: Entry) {\n  return entryStats(entry).time;\n}\n\nfunction isTopLevelEntry(entry: Entry) {\n  return entry.length === 1;\n}\n\nfunction topLevelEntries() {\n  return entries.filter(isTopLevelEntry);\n}\n\nfunction print(text: string) {\n  console.log(prefix + text);\n}\n\nfunction isChild(entry1: Entry, entry2: Entry) {\n  if (entry2.length !== entry1.length + 1) {\n    return false;\n  }\n  for (var i = entry1.length - 1; i >= 0; i--) {\n    if (entry1[i] !== entry2[i]) {\n      return false;\n    }\n  }\n  return true;\n}\n\nfunction children(entry1: Entry) {\n  return entries.filter(entry2 => isChild(entry1, entry2));\n}\n\nfunction hasChildren(entry: Entry) {\n  return children(entry).length > 0;\n}\n\nfunction hasSignificantChildren(entry: Entry) {\n  return children(entry).some(entry => entryTime(entry) >= filter);\n}\n\nfunction isLeaf(entry: Entry) {\n  return ! hasChildren(entry);\n}\n\nfunction otherTime(entry: Entry) {\n  let total = 0;\n  children(entry).forEach(child => {\n    total += entryTime(child);\n  });\n  return entryTime(entry) - total;\n}\n\nfunction injectOtherTime(entry: Entry) {\n  const other: Entry = entry.slice(0);\n  other.push(\"other \" + entryName(entry));\n  bucketStats[encodeEntryKey(other)] = {\n    time: otherTime(entry),\n    count: entryStats(entry).count,\n    isOther: true\n  };\n  entries.push(other);\n};\n\nfunction reportOn(entry: Entry, isLastLeafStack: boolean[] = []) {\n  const stats = entryStats(entry);\n  const isParent = hasSignificantChildren(entry);\n  const name = entryName(entry);\n\n  print((isParent ? leftRightDots : leftRightAlign)\n        (printIndentation(isLastLeafStack) + name, formatMs(stats.time), 70)\n        + (stats.isOther ? \"\" : (\" (\" + stats.count + \")\")));\n\n  if (isParent) {\n    const childrenList = children(entry).filter(entry => {\n      return entryStats(entry).time > filter;\n    });\n    childrenList.forEach((child, i) => {\n      const isLastLeaf = i === childrenList.length - 1;\n      reportOn(child, isLastLeafStack.concat(isLastLeaf));\n    });\n  }\n}\n\nfunction reportHierarchy() {\n  topLevelEntries().forEach(entry => reportOn(entry));\n}\n\nfunction allLeafs() {\n  const set: { [name: string]: any } = Object.create(null);\n  entries.filter(isLeaf).map(entryName).forEach(name => set[name] = true);\n  return Object.keys(set).sort();\n}\n\nfunction leafTotals(leafName: string) {\n  let time = 0;\n  let count = 0;\n\n  entries.filter(entry => {\n    return entryName(entry) === leafName && isLeaf(entry);\n  }).forEach(leaf => {\n    const stats = entryStats(leaf);\n    time += stats.time;\n    count += stats.count;\n  });\n\n  return { time, count };\n}\n\nfunction reportHotLeaves() {\n  print('Top leaves:');\n\n  const totals = allLeafs().map(leaf => {\n    const info = leafTotals(leaf);\n    return {\n      name: leaf,\n      time: info.time,\n      count: info.count,\n    };\n  }).sort((a, b) => {\n    return a.time === b.time ? 0 : a.time > b.time ? -1 : 1;\n  });\n\n  totals.forEach(total => {\n    if (total.time < 100) { // hard-coded larger filter to quality as \"hot\" here\n      return;\n    }\n    print(leftRightDots(total.name, formatMs(total.time), 65) + ` (${total.count})`);\n  });\n}\n\nfunction getTopLevelTotal() {\n  let topTotal = 0;\n  topLevelEntries().forEach(entry => {\n    topTotal += entryTime(entry);\n  });\n  return topTotal;\n}\n\nfunction setupReport() {\n  entries = Object.keys(bucketStats).map(decodeEntryKey);\n  entries.filter(hasSignificantChildren).forEach(parent => {\n    injectOtherTime(parent);\n  });\n}\n"],"file":"tools/tool-env/profile.js.map"}